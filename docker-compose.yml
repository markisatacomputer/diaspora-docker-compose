version: '3.2'

services:
  app:
    build:
      context: .
      args:
        - DIASPORA_PATH=${DIASPORA_PATH:-/app}
        - ENVIRONMENT_REQUIRE_SSL=${ENVIRONMENT_REQUIRE_SSL:-'false'}
        - SERVER_RAILS_ENVIRONMENT=${SERVER_RAILS_ENVIRONMENT:-development}
        - POSTGRES_USER=${POSTGRES_USER:-diaspora}
        - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-diaspora}
    depends_on:
      - redis
      - postgres
    environment:
      - RAILS_ENV=${RAILS_ENV:-development}
      - DIASPORA_PATH=${DIASPORA_PATH:-/app}
      - POSTGRES_USER=${POSTGRES_USER:-diaspora}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-diaspora}
    ports:
      - 3000:3000
    networks:
      - appnet
    volumes:
      - /app
    command: /bin/bash -l -c "./start.sh"

  postgres:
    image: 'postgres'
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-diaspora}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-diaspora}
      - POSTGRES_DB=${POSTGRES_DB:-diaspora}
    networks:
      - appnet
    volumes:
      - /var/lib/postgresql/data

  redis:
    image: 'redis:alpine'
    command: redis-server
    ports:
      - '6379:6379'
    networks:
      - appnet
    volumes:
      - /var/lib/redis/data

networks:
  appnet:
